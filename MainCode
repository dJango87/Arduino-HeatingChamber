/*CREDIT************************************************** 
  This is an example for the Adafruit Thermocouple Sensor w/MAX31855K

  Designed specifically to work with the Adafruit Thermocouple Sensor
  ----> https://www.adafruit.com/products/269

  These displays use SPI to communicate, 3 pins are required to  
  interface
  Adafruit invests time and resources providing this open source code, 
  please support Adafruit and open-source hardware by purchasing 
  products from Adafruit!

  Written by Limor Fried/Ladyada for Adafruit Industries.  
  BSD license, all text above must be included in any redistribution
 ****************************************************/
/*
  Date: 23-10-2015
  Author: J.P."Jimmy"Tey
  TITLE: Temperature reading acquired from K-type thermocouple and 
         displayed on LCD.
  Objective: 1. To read temperautre from K-type thermocouple through SPI
                interface.
             2. To display temeprature reading onto backlit-LCD
             3. Serial output for data logging on computer
             4. Data smoothing
  Version: 0.3.0
 */
 
#include <SPI.h>
#include "Adafruit_MAX31855.h"
#include <LiquidCrystal.h>

int thermoCLK = 8;
int thermoCS = 9;
int thermoDO = 10;
int delaytime=500;
//define degree symbol
byte deg[8] = 
{
  B00110,
  B01001,
  B01001,
  B00110,
  B00000,
  B00000,
  B00000,
  B00000,
};

//Define variables for smoothing
const int numReadings = 10;
float readings[numReadings];
int readIndex = 0;
float total = 0;
int averageC = 0;


// Initialize the Thermocouple
Adafruit_MAX31855 thermocouple(thermoCLK, thermoCS, thermoDO);
// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(2, 3, 4, 5, 6, 7);
  
void setup() 
{
  Serial.begin(9600);
  lcd.createChar(0, deg);
  // set up the LCD's number of columns and rows: 
  lcd.begin(16, 2);
  
  lcd.print("MAX31855 test");
  // wait for MAX chip to stabilize
  delay(1000);

  //Initiliaze all the readings[numReadings] inside the array to 0
  for (int thisReading = 0; thisReading < numReadings; thisReading++)
  {
    readings[thisReading] = 0;
  }
}

void loop() 
{
  //Display internal temperature of the MAX31855K chip
   lcd.setCursor(0, 0);
   lcd.print("Int.Temp = ");
   lcd.println(thermocouple.readInternal());
   lcd.print("  ");
     
   double c = thermocouple.readCelsius();
   lcd.setCursor(0, 1);
   if (isnan(c)) 
   {
     lcd.print("T/C Problem");
   } 
   else 
   {
     //Subtract the last reading in the array
     total = total - readings[readIndex];
     readings[readIndex] = c;
     total = total + readings[readIndex];
     readIndex = readIndex + 1;

     //If at the end of array
     if (readIndex >= numReadings)
     {
      readIndex = 0;
     }

     //Calculate the average
     averageC = round(total / numReadings);
          
     lcd.print("Temp = "); 
     lcd.print(averageC);
     lcd.print("   ");
     lcd.setCursor(11,1);
     lcd.write(byte(0)); //create the degree symbol
     lcd.print("C"); 
     //Serial output to computer serial COM port
     Serial.print(averageC); //integer average temperature
     Serial.print(",");
     //EXTRA FOR CONFIRMATION OF ROUNDING
     Serial.println(total/numReadings); //Floating average
   }
    
   delay(delaytime);

}
